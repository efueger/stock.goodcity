machine:
  xcode:
    version: "9.2"
  environment:
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx1024m -XX:+HeapDumpOnOutOfMemoryError"'
    XCODE_SCHEME: stock.goodcity
    XCODE_WORKSPACE: stock.goodcity
    GYM_CODE_SIGNING_IDENTITY: "iPhone Distribution: Crossroads Foundation Limited"
    FL_TESTFAIRY_AUTO_UPDATE: "on"
    PILOT_SKIP_SUBMISSION: true
    PILOT_WAIT_PROCESSING_INTERVAL: 60
    ANDROID_HOME: "${HOME}/android-sdk"
    PATH: "${PATH}:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:$HOME/.yarn/bin:${ANDROID_HOME}/tools"
    CC_TEST_REPORTER_ID: 4f3d35c7370650abe126ce89bb15dbb3fe86044cec7d273cef3d026c0d44996b

dependencies:
  cache_directories:
    - ~/.yarn
    - ~/android-sdk
  pre:
    - brew update
    - brew install homebrew/core/node6-lts
    - echo 'export PATH="/usr/local/opt/node@6/bin:$PATH"' >> ~/.circlerc
    - mkdir -p ${ANDROID_HOME}
    - if ! $(grep -q "Revision=23.0.1" $ANDROID_HOME/tools/source.properties); then (curl -o ~/android-sdk.zip https://dl.google.com/android/repository/tools_r23.0.1-macosx.zip && unzip -d ${ANDROID_HOME} ~/android-sdk.zip) && (( sleep 5 && while [ 1 ]; do sleep 1; echo y; done ) | android update sdk --no-ui --all --filter platform-tools,build-tools-23.0.1,android-23,extra-android-m2repository,extra-google-m2repository); fi
    - if ! (which yarn); then curl -o- -L https://yarnpkg.com/install.sh | bash; fi
  override:
    - yarn install
  post:
    - yarn add --force node-sass
    - yarn add bower phantomjs-prebuilt
    - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-darwin-amd64 > ./cc-test-reporter
    - chmod +x ./cc-test-reporter
    - bundle install
    - bower install
    - PATH=$(npm bin):$PATH; azure-filestore download -f goodcity.keystore:
        pwd: cordova
    - PATH=$(npm bin):$PATH; azure-filestore download -d google-play -f $GOOGLE_PLAY_KEY_FILE:
        pwd: fastlane

test:
  pre:
    - ember server --port 4203:
        background: true
    - sleep 5
    - ./cc-test-reporter before-build
  override:
    - COVERAGE=true ember test
  post:
    - ./cc-test-reporter format-coverage --debug --output "coverage/codeclimate.json"
    - ./cc-test-reporter format-coverage --debug -t lcov ./coverage/lcov.info
    - ./cc-test-reporter upload-coverage --debug -r $CODECLIMATE_REPO_TOKEN
    - ember build
    - echo "Killing ember server to free memory for app build" && killall ember

deployment:
  staging:
    branch: master
    commands:
      - bundle exec cap staging deploy
      - bundle exec rake staging android app:build
      - bundle exec fastlane android staging
      - bundle exec rake staging ios app:build
      - bundle exec fastlane ios staging
      - curl https://api.rollbar.com/api/1/sourcemap/download -F access_token=$ROLLBAR_KEY -F version=$APP_VERSION -F minified_url=https://stock-staging.goodcity.hk/assets/stock.js
  production:
    branch: live
    commands:
      - bundle exec cap production deploy
      - bundle exec rake production android app:build
      - bundle exec rake production ios app:build
      - bundle exec fastlane android beta
      - bundle exec fastlane ios beta
      - curl https://api.rollbar.com/api/1/sourcemap/download -F access_token=$ROLLBAR_KEY -F version=$APP_VERSION -F minified_url=https://stock.goodcity.hk/assets/stock.js
